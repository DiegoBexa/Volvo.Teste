// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volvo.Teste.Repositorio.ContextoDb;

namespace Volvo.Teste.Repositorio.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211209213202_AtualizacaoNotNull")]
    partial class AtualizacaoNotNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Volvo.Teste.Dominio.Caminhao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnoModelo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Caminhao");
                });

            modelBuilder.Entity("Volvo.Teste.Dominio.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Volvo.Teste.Dominio.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ModeloPermitido")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelo");
                });

            modelBuilder.Entity("Volvo.Teste.Dominio.Caminhao", b =>
                {
                    b.HasOne("Volvo.Teste.Dominio.Marca", "Marca")
                        .WithMany("Caminhoes")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volvo.Teste.Dominio.Modelo", "Modelo")
                        .WithMany("Caminhoes")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("Volvo.Teste.Dominio.Modelo", b =>
                {
                    b.HasOne("Volvo.Teste.Dominio.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Volvo.Teste.Dominio.Marca", b =>
                {
                    b.Navigation("Caminhoes");

                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("Volvo.Teste.Dominio.Modelo", b =>
                {
                    b.Navigation("Caminhoes");
                });
#pragma warning restore 612, 618
        }
    }
}
